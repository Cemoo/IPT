#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IP_BusinessTracking
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="IpTracking")]
	public partial class IPTrackingDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDepartment(Department instance);
    partial void UpdateDepartment(Department instance);
    partial void DeleteDepartment(Department instance);
    partial void InsertWork(Work instance);
    partial void UpdateWork(Work instance);
    partial void DeleteWork(Work instance);
    partial void InsertLoginStatus(LoginStatus instance);
    partial void UpdateLoginStatus(LoginStatus instance);
    partial void DeleteLoginStatus(LoginStatus instance);
    partial void InsertMission(Mission instance);
    partial void UpdateMission(Mission instance);
    partial void DeleteMission(Mission instance);
    partial void InsertOperation_Result(Operation_Result instance);
    partial void UpdateOperation_Result(Operation_Result instance);
    partial void DeleteOperation_Result(Operation_Result instance);
    partial void InsertOperation(Operation instance);
    partial void UpdateOperation(Operation instance);
    partial void DeleteOperation(Operation instance);
    partial void InsertPersonalInformation1(PersonalInformation1 instance);
    partial void UpdatePersonalInformation1(PersonalInformation1 instance);
    partial void DeletePersonalInformation1(PersonalInformation1 instance);
    partial void InsertPersonalInformation(PersonalInformation instance);
    partial void UpdatePersonalInformation(PersonalInformation instance);
    partial void DeletePersonalInformation(PersonalInformation instance);
    partial void InsertLog(Log instance);
    partial void UpdateLog(Log instance);
    partial void DeleteLog(Log instance);
    #endregion
		
		public IPTrackingDataContext() : 
				base(global::IP_BusinessTracking.Properties.Settings.Default.IpTrackingConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public IPTrackingDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public IPTrackingDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public IPTrackingDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public IPTrackingDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Department> Departments
		{
			get
			{
				return this.GetTable<Department>();
			}
		}
		
		public System.Data.Linq.Table<Work> Works
		{
			get
			{
				return this.GetTable<Work>();
			}
		}
		
		public System.Data.Linq.Table<LoginStatus> LoginStatus
		{
			get
			{
				return this.GetTable<LoginStatus>();
			}
		}
		
		public System.Data.Linq.Table<Mission> Missions
		{
			get
			{
				return this.GetTable<Mission>();
			}
		}
		
		public System.Data.Linq.Table<Operation_Result> Operation_Results
		{
			get
			{
				return this.GetTable<Operation_Result>();
			}
		}
		
		public System.Data.Linq.Table<Operation> Operations
		{
			get
			{
				return this.GetTable<Operation>();
			}
		}
		
		public System.Data.Linq.Table<PersonalInformation1> PersonalInformation1s
		{
			get
			{
				return this.GetTable<PersonalInformation1>();
			}
		}
		
		public System.Data.Linq.Table<PersonalInformation> PersonalInformations
		{
			get
			{
				return this.GetTable<PersonalInformation>();
			}
		}
		
		public System.Data.Linq.Table<Log> Logs
		{
			get
			{
				return this.GetTable<Log>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Department")]
	public partial class Department : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _AuthID;
		
		private string _AuthName;
		
		private EntitySet<PersonalInformation1> _PersonalInformation1s;
		
		private EntitySet<PersonalInformation> _PersonalInformations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAuthIDChanging(System.Guid value);
    partial void OnAuthIDChanged();
    partial void OnAuthNameChanging(string value);
    partial void OnAuthNameChanged();
    #endregion
		
		public Department()
		{
			this._PersonalInformation1s = new EntitySet<PersonalInformation1>(new Action<PersonalInformation1>(this.attach_PersonalInformation1s), new Action<PersonalInformation1>(this.detach_PersonalInformation1s));
			this._PersonalInformations = new EntitySet<PersonalInformation>(new Action<PersonalInformation>(this.attach_PersonalInformations), new Action<PersonalInformation>(this.detach_PersonalInformations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid AuthID
		{
			get
			{
				return this._AuthID;
			}
			set
			{
				if ((this._AuthID != value))
				{
					this.OnAuthIDChanging(value);
					this.SendPropertyChanging();
					this._AuthID = value;
					this.SendPropertyChanged("AuthID");
					this.OnAuthIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthName", DbType="NVarChar(50)")]
		public string AuthName
		{
			get
			{
				return this._AuthName;
			}
			set
			{
				if ((this._AuthName != value))
				{
					this.OnAuthNameChanging(value);
					this.SendPropertyChanging();
					this._AuthName = value;
					this.SendPropertyChanged("AuthName");
					this.OnAuthNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_PersonalInformation1", Storage="_PersonalInformation1s", ThisKey="AuthID", OtherKey="Departman")]
		public EntitySet<PersonalInformation1> PersonalInformation1s
		{
			get
			{
				return this._PersonalInformation1s;
			}
			set
			{
				this._PersonalInformation1s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_PersonalInformation", Storage="_PersonalInformations", ThisKey="AuthID", OtherKey="Departman")]
		public EntitySet<PersonalInformation> PersonalInformations
		{
			get
			{
				return this._PersonalInformations;
			}
			set
			{
				this._PersonalInformations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PersonalInformation1s(PersonalInformation1 entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_PersonalInformation1s(PersonalInformation1 entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
		
		private void attach_PersonalInformations(PersonalInformation entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_PersonalInformations(PersonalInformation entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Work]")]
	public partial class Work : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _WID;
		
		private string _WorkName;
		
		private System.Nullable<System.DateTime> _AddedTime;
		
		private string _Image;
		
		private string _Explanation;
		
		private System.Nullable<bool> _Deleted;
		
		private System.Nullable<System.DateTime> _DeletedTime;
		
		private EntitySet<Operation> _Operations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWIDChanging(System.Guid value);
    partial void OnWIDChanged();
    partial void OnWorkNameChanging(string value);
    partial void OnWorkNameChanged();
    partial void OnAddedTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnAddedTimeChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnExplanationChanging(string value);
    partial void OnExplanationChanged();
    partial void OnDeletedChanging(System.Nullable<bool> value);
    partial void OnDeletedChanged();
    partial void OnDeletedTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDeletedTimeChanged();
    #endregion
		
		public Work()
		{
			this._Operations = new EntitySet<Operation>(new Action<Operation>(this.attach_Operations), new Action<Operation>(this.detach_Operations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid WID
		{
			get
			{
				return this._WID;
			}
			set
			{
				if ((this._WID != value))
				{
					this.OnWIDChanging(value);
					this.SendPropertyChanging();
					this._WID = value;
					this.SendPropertyChanged("WID");
					this.OnWIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkName", DbType="NVarChar(MAX)")]
		public string WorkName
		{
			get
			{
				return this._WorkName;
			}
			set
			{
				if ((this._WorkName != value))
				{
					this.OnWorkNameChanging(value);
					this.SendPropertyChanging();
					this._WorkName = value;
					this.SendPropertyChanged("WorkName");
					this.OnWorkNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddedTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> AddedTime
		{
			get
			{
				return this._AddedTime;
			}
			set
			{
				if ((this._AddedTime != value))
				{
					this.OnAddedTimeChanging(value);
					this.SendPropertyChanging();
					this._AddedTime = value;
					this.SendPropertyChanged("AddedTime");
					this.OnAddedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(MAX)")]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Explanation", DbType="NVarChar(MAX)")]
		public string Explanation
		{
			get
			{
				return this._Explanation;
			}
			set
			{
				if ((this._Explanation != value))
				{
					this.OnExplanationChanging(value);
					this.SendPropertyChanging();
					this._Explanation = value;
					this.SendPropertyChanged("Explanation");
					this.OnExplanationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit")]
		public System.Nullable<bool> Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeletedTime
		{
			get
			{
				return this._DeletedTime;
			}
			set
			{
				if ((this._DeletedTime != value))
				{
					this.OnDeletedTimeChanging(value);
					this.SendPropertyChanging();
					this._DeletedTime = value;
					this.SendPropertyChanged("DeletedTime");
					this.OnDeletedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Work_Operation", Storage="_Operations", ThisKey="WID", OtherKey="WorkID")]
		public EntitySet<Operation> Operations
		{
			get
			{
				return this._Operations;
			}
			set
			{
				this._Operations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Operations(Operation entity)
		{
			this.SendPropertyChanging();
			entity.Work = this;
		}
		
		private void detach_Operations(Operation entity)
		{
			this.SendPropertyChanging();
			entity.Work = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoginStatus")]
	public partial class LoginStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _LoginID;
		
		private string _IP;
		
		private string _PCName;
		
		private System.Nullable<System.Guid> _PersID;
		
		private System.Nullable<System.DateTime> _LoginDate;
		
		private System.Nullable<System.DateTime> _LogOutDate;
		
		private EntityRef<PersonalInformation1> _PersonalInformation1;
		
		private EntityRef<PersonalInformation> _PersonalInformation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoginIDChanging(System.Guid value);
    partial void OnLoginIDChanged();
    partial void OnIPChanging(string value);
    partial void OnIPChanged();
    partial void OnPCNameChanging(string value);
    partial void OnPCNameChanged();
    partial void OnPersIDChanging(System.Nullable<System.Guid> value);
    partial void OnPersIDChanged();
    partial void OnLoginDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLoginDateChanged();
    partial void OnLogOutDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLogOutDateChanged();
    #endregion
		
		public LoginStatus()
		{
			this._PersonalInformation1 = default(EntityRef<PersonalInformation1>);
			this._PersonalInformation = default(EntityRef<PersonalInformation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid LoginID
		{
			get
			{
				return this._LoginID;
			}
			set
			{
				if ((this._LoginID != value))
				{
					this.OnLoginIDChanging(value);
					this.SendPropertyChanging();
					this._LoginID = value;
					this.SendPropertyChanged("LoginID");
					this.OnLoginIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IP", DbType="NVarChar(50)")]
		public string IP
		{
			get
			{
				return this._IP;
			}
			set
			{
				if ((this._IP != value))
				{
					this.OnIPChanging(value);
					this.SendPropertyChanging();
					this._IP = value;
					this.SendPropertyChanged("IP");
					this.OnIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PCName", DbType="NVarChar(50)")]
		public string PCName
		{
			get
			{
				return this._PCName;
			}
			set
			{
				if ((this._PCName != value))
				{
					this.OnPCNameChanging(value);
					this.SendPropertyChanging();
					this._PCName = value;
					this.SendPropertyChanged("PCName");
					this.OnPCNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PersID
		{
			get
			{
				return this._PersID;
			}
			set
			{
				if ((this._PersID != value))
				{
					if ((this._PersonalInformation1.HasLoadedOrAssignedValue || this._PersonalInformation.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersIDChanging(value);
					this.SendPropertyChanging();
					this._PersID = value;
					this.SendPropertyChanged("PersID");
					this.OnPersIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LoginDate
		{
			get
			{
				return this._LoginDate;
			}
			set
			{
				if ((this._LoginDate != value))
				{
					this.OnLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LoginDate = value;
					this.SendPropertyChanged("LoginDate");
					this.OnLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogOutDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LogOutDate
		{
			get
			{
				return this._LogOutDate;
			}
			set
			{
				if ((this._LogOutDate != value))
				{
					this.OnLogOutDateChanging(value);
					this.SendPropertyChanging();
					this._LogOutDate = value;
					this.SendPropertyChanged("LogOutDate");
					this.OnLogOutDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PersonalInformation1_LoginStatus", Storage="_PersonalInformation1", ThisKey="PersID", OtherKey="PID", IsForeignKey=true)]
		public PersonalInformation1 PersonalInformation1
		{
			get
			{
				return this._PersonalInformation1.Entity;
			}
			set
			{
				PersonalInformation1 previousValue = this._PersonalInformation1.Entity;
				if (((previousValue != value) 
							|| (this._PersonalInformation1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PersonalInformation1.Entity = null;
						previousValue.LoginStatus.Remove(this);
					}
					this._PersonalInformation1.Entity = value;
					if ((value != null))
					{
						value.LoginStatus.Add(this);
						this._PersID = value.PID;
					}
					else
					{
						this._PersID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("PersonalInformation1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PersonalInformation_LoginStatus", Storage="_PersonalInformation", ThisKey="PersID", OtherKey="PID", IsForeignKey=true)]
		public PersonalInformation PersonalInformation
		{
			get
			{
				return this._PersonalInformation.Entity;
			}
			set
			{
				PersonalInformation previousValue = this._PersonalInformation.Entity;
				if (((previousValue != value) 
							|| (this._PersonalInformation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PersonalInformation.Entity = null;
						previousValue.LoginStatus.Remove(this);
					}
					this._PersonalInformation.Entity = value;
					if ((value != null))
					{
						value.LoginStatus.Add(this);
						this._PersID = value.PID;
					}
					else
					{
						this._PersID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("PersonalInformation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Mission")]
	public partial class Mission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _MID;
		
		private string _MissionName;
		
		private EntitySet<Operation_Result> _Operation_Results;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMIDChanging(System.Guid value);
    partial void OnMIDChanged();
    partial void OnMissionNameChanging(string value);
    partial void OnMissionNameChanged();
    #endregion
		
		public Mission()
		{
			this._Operation_Results = new EntitySet<Operation_Result>(new Action<Operation_Result>(this.attach_Operation_Results), new Action<Operation_Result>(this.detach_Operation_Results));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid MID
		{
			get
			{
				return this._MID;
			}
			set
			{
				if ((this._MID != value))
				{
					this.OnMIDChanging(value);
					this.SendPropertyChanging();
					this._MID = value;
					this.SendPropertyChanged("MID");
					this.OnMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MissionName", DbType="NVarChar(50)")]
		public string MissionName
		{
			get
			{
				return this._MissionName;
			}
			set
			{
				if ((this._MissionName != value))
				{
					this.OnMissionNameChanging(value);
					this.SendPropertyChanging();
					this._MissionName = value;
					this.SendPropertyChanged("MissionName");
					this.OnMissionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mission_Operation_Result", Storage="_Operation_Results", ThisKey="MID", OtherKey="MisID")]
		public EntitySet<Operation_Result> Operation_Results
		{
			get
			{
				return this._Operation_Results;
			}
			set
			{
				this._Operation_Results.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Operation_Results(Operation_Result entity)
		{
			this.SendPropertyChanging();
			entity.Mission = this;
		}
		
		private void detach_Operation_Results(Operation_Result entity)
		{
			this.SendPropertyChanging();
			entity.Mission = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Operation_Result")]
	public partial class Operation_Result : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _OpResID;
		
		private string _OpResName;
		
		private System.Nullable<System.Guid> _MisID;
		
		private EntityRef<Mission> _Mission;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOpResIDChanging(System.Guid value);
    partial void OnOpResIDChanged();
    partial void OnOpResNameChanging(string value);
    partial void OnOpResNameChanged();
    partial void OnMisIDChanging(System.Nullable<System.Guid> value);
    partial void OnMisIDChanged();
    #endregion
		
		public Operation_Result()
		{
			this._Mission = default(EntityRef<Mission>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpResID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid OpResID
		{
			get
			{
				return this._OpResID;
			}
			set
			{
				if ((this._OpResID != value))
				{
					this.OnOpResIDChanging(value);
					this.SendPropertyChanging();
					this._OpResID = value;
					this.SendPropertyChanged("OpResID");
					this.OnOpResIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpResName", DbType="NVarChar(MAX)")]
		public string OpResName
		{
			get
			{
				return this._OpResName;
			}
			set
			{
				if ((this._OpResName != value))
				{
					this.OnOpResNameChanging(value);
					this.SendPropertyChanging();
					this._OpResName = value;
					this.SendPropertyChanged("OpResName");
					this.OnOpResNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MisID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> MisID
		{
			get
			{
				return this._MisID;
			}
			set
			{
				if ((this._MisID != value))
				{
					if (this._Mission.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMisIDChanging(value);
					this.SendPropertyChanging();
					this._MisID = value;
					this.SendPropertyChanged("MisID");
					this.OnMisIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mission_Operation_Result", Storage="_Mission", ThisKey="MisID", OtherKey="MID", IsForeignKey=true)]
		public Mission Mission
		{
			get
			{
				return this._Mission.Entity;
			}
			set
			{
				Mission previousValue = this._Mission.Entity;
				if (((previousValue != value) 
							|| (this._Mission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Mission.Entity = null;
						previousValue.Operation_Results.Remove(this);
					}
					this._Mission.Entity = value;
					if ((value != null))
					{
						value.Operation_Results.Add(this);
						this._MisID = value.MID;
					}
					else
					{
						this._MisID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Mission");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Operation")]
	public partial class Operation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _OpID;
		
		private System.Guid _PersID;
		
		private System.Nullable<System.Guid> _WorkID;
		
		private System.Nullable<System.Guid> _MisID;
		
		private string _Aciklama;
		
		private System.Nullable<System.Guid> _AssignedPers;
		
		private System.Nullable<System.DateTime> _OperationDate;
		
		private System.Nullable<bool> _IsClosed;
		
		private System.Nullable<System.DateTime> _ClosingDate;
		
		private EntityRef<Work> _Work;
		
		private EntityRef<PersonalInformation1> _PersonalInformation1;
		
		private EntityRef<PersonalInformation> _PersonalInformation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOpIDChanging(System.Guid value);
    partial void OnOpIDChanged();
    partial void OnPersIDChanging(System.Guid value);
    partial void OnPersIDChanged();
    partial void OnWorkIDChanging(System.Nullable<System.Guid> value);
    partial void OnWorkIDChanged();
    partial void OnMisIDChanging(System.Nullable<System.Guid> value);
    partial void OnMisIDChanged();
    partial void OnAciklamaChanging(string value);
    partial void OnAciklamaChanged();
    partial void OnAssignedPersChanging(System.Nullable<System.Guid> value);
    partial void OnAssignedPersChanged();
    partial void OnOperationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnOperationDateChanged();
    partial void OnIsClosedChanging(System.Nullable<bool> value);
    partial void OnIsClosedChanged();
    partial void OnClosingDateChanging(System.Nullable<System.DateTime> value);
    partial void OnClosingDateChanged();
    #endregion
		
		public Operation()
		{
			this._Work = default(EntityRef<Work>);
			this._PersonalInformation1 = default(EntityRef<PersonalInformation1>);
			this._PersonalInformation = default(EntityRef<PersonalInformation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid OpID
		{
			get
			{
				return this._OpID;
			}
			set
			{
				if ((this._OpID != value))
				{
					this.OnOpIDChanging(value);
					this.SendPropertyChanging();
					this._OpID = value;
					this.SendPropertyChanged("OpID");
					this.OnOpIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PersID
		{
			get
			{
				return this._PersID;
			}
			set
			{
				if ((this._PersID != value))
				{
					if ((this._PersonalInformation1.HasLoadedOrAssignedValue || this._PersonalInformation.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersIDChanging(value);
					this.SendPropertyChanging();
					this._PersID = value;
					this.SendPropertyChanged("PersID");
					this.OnPersIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> WorkID
		{
			get
			{
				return this._WorkID;
			}
			set
			{
				if ((this._WorkID != value))
				{
					if (this._Work.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkIDChanging(value);
					this.SendPropertyChanging();
					this._WorkID = value;
					this.SendPropertyChanged("WorkID");
					this.OnWorkIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MisID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> MisID
		{
			get
			{
				return this._MisID;
			}
			set
			{
				if ((this._MisID != value))
				{
					this.OnMisIDChanging(value);
					this.SendPropertyChanging();
					this._MisID = value;
					this.SendPropertyChanged("MisID");
					this.OnMisIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Aciklama", DbType="NVarChar(MAX)")]
		public string Aciklama
		{
			get
			{
				return this._Aciklama;
			}
			set
			{
				if ((this._Aciklama != value))
				{
					this.OnAciklamaChanging(value);
					this.SendPropertyChanging();
					this._Aciklama = value;
					this.SendPropertyChanged("Aciklama");
					this.OnAciklamaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignedPers", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> AssignedPers
		{
			get
			{
				return this._AssignedPers;
			}
			set
			{
				if ((this._AssignedPers != value))
				{
					this.OnAssignedPersChanging(value);
					this.SendPropertyChanging();
					this._AssignedPers = value;
					this.SendPropertyChanged("AssignedPers");
					this.OnAssignedPersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> OperationDate
		{
			get
			{
				return this._OperationDate;
			}
			set
			{
				if ((this._OperationDate != value))
				{
					this.OnOperationDateChanging(value);
					this.SendPropertyChanging();
					this._OperationDate = value;
					this.SendPropertyChanged("OperationDate");
					this.OnOperationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsClosed", DbType="Bit")]
		public System.Nullable<bool> IsClosed
		{
			get
			{
				return this._IsClosed;
			}
			set
			{
				if ((this._IsClosed != value))
				{
					this.OnIsClosedChanging(value);
					this.SendPropertyChanging();
					this._IsClosed = value;
					this.SendPropertyChanged("IsClosed");
					this.OnIsClosedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClosingDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ClosingDate
		{
			get
			{
				return this._ClosingDate;
			}
			set
			{
				if ((this._ClosingDate != value))
				{
					this.OnClosingDateChanging(value);
					this.SendPropertyChanging();
					this._ClosingDate = value;
					this.SendPropertyChanged("ClosingDate");
					this.OnClosingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Work_Operation", Storage="_Work", ThisKey="WorkID", OtherKey="WID", IsForeignKey=true)]
		public Work Work
		{
			get
			{
				return this._Work.Entity;
			}
			set
			{
				Work previousValue = this._Work.Entity;
				if (((previousValue != value) 
							|| (this._Work.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Work.Entity = null;
						previousValue.Operations.Remove(this);
					}
					this._Work.Entity = value;
					if ((value != null))
					{
						value.Operations.Add(this);
						this._WorkID = value.WID;
					}
					else
					{
						this._WorkID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Work");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PersonalInformation1_Operation", Storage="_PersonalInformation1", ThisKey="PersID", OtherKey="PID", IsForeignKey=true)]
		public PersonalInformation1 PersonalInformation1
		{
			get
			{
				return this._PersonalInformation1.Entity;
			}
			set
			{
				PersonalInformation1 previousValue = this._PersonalInformation1.Entity;
				if (((previousValue != value) 
							|| (this._PersonalInformation1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PersonalInformation1.Entity = null;
						previousValue.Operations.Remove(this);
					}
					this._PersonalInformation1.Entity = value;
					if ((value != null))
					{
						value.Operations.Add(this);
						this._PersID = value.PID;
					}
					else
					{
						this._PersID = default(System.Guid);
					}
					this.SendPropertyChanged("PersonalInformation1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PersonalInformation_Operation", Storage="_PersonalInformation", ThisKey="PersID", OtherKey="PID", IsForeignKey=true)]
		public PersonalInformation PersonalInformation
		{
			get
			{
				return this._PersonalInformation.Entity;
			}
			set
			{
				PersonalInformation previousValue = this._PersonalInformation.Entity;
				if (((previousValue != value) 
							|| (this._PersonalInformation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PersonalInformation.Entity = null;
						previousValue.Operations.Remove(this);
					}
					this._PersonalInformation.Entity = value;
					if ((value != null))
					{
						value.Operations.Add(this);
						this._PersID = value.PID;
					}
					else
					{
						this._PersID = default(System.Guid);
					}
					this.SendPropertyChanged("PersonalInformation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PersonalInformation")]
	public partial class PersonalInformation1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PID;
		
		private string _Name;
		
		private string _Surname;
		
		private string _Tel;
		
		private string _TC;
		
		private string _Adress;
		
		private string _Mail;
		
		private string _P_Image;
		
		private System.Nullable<System.Guid> _Departman;
		
		private string _Username;
		
		private string _Password;
		
		private System.Nullable<System.DateTime> _AddedTime;
		
		private System.Nullable<bool> _IsDeleted;
		
		private System.Nullable<System.DateTime> _DeletedTime;
		
		private EntitySet<LoginStatus> _LoginStatus;
		
		private EntitySet<Operation> _Operations;
		
		private EntityRef<Department> _Department;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPIDChanging(System.Guid value);
    partial void OnPIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSurnameChanging(string value);
    partial void OnSurnameChanged();
    partial void OnTelChanging(string value);
    partial void OnTelChanged();
    partial void OnTCChanging(string value);
    partial void OnTCChanged();
    partial void OnAdressChanging(string value);
    partial void OnAdressChanged();
    partial void OnMailChanging(string value);
    partial void OnMailChanged();
    partial void OnP_ImageChanging(string value);
    partial void OnP_ImageChanged();
    partial void OnDepartmanChanging(System.Nullable<System.Guid> value);
    partial void OnDepartmanChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnAddedTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnAddedTimeChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnDeletedTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDeletedTimeChanged();
    #endregion
		
		public PersonalInformation1()
		{
			this._LoginStatus = new EntitySet<LoginStatus>(new Action<LoginStatus>(this.attach_LoginStatus), new Action<LoginStatus>(this.detach_LoginStatus));
			this._Operations = new EntitySet<Operation>(new Action<Operation>(this.attach_Operations), new Action<Operation>(this.detach_Operations));
			this._Department = default(EntityRef<Department>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PID
		{
			get
			{
				return this._PID;
			}
			set
			{
				if ((this._PID != value))
				{
					this.OnPIDChanging(value);
					this.SendPropertyChanging();
					this._PID = value;
					this.SendPropertyChanged("PID");
					this.OnPIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="NVarChar(50)")]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this.OnSurnameChanging(value);
					this.SendPropertyChanging();
					this._Surname = value;
					this.SendPropertyChanged("Surname");
					this.OnSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tel", DbType="NVarChar(50)")]
		public string Tel
		{
			get
			{
				return this._Tel;
			}
			set
			{
				if ((this._Tel != value))
				{
					this.OnTelChanging(value);
					this.SendPropertyChanging();
					this._Tel = value;
					this.SendPropertyChanged("Tel");
					this.OnTelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TC", DbType="NVarChar(50)")]
		public string TC
		{
			get
			{
				return this._TC;
			}
			set
			{
				if ((this._TC != value))
				{
					this.OnTCChanging(value);
					this.SendPropertyChanging();
					this._TC = value;
					this.SendPropertyChanged("TC");
					this.OnTCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adress", DbType="NVarChar(MAX)")]
		public string Adress
		{
			get
			{
				return this._Adress;
			}
			set
			{
				if ((this._Adress != value))
				{
					this.OnAdressChanging(value);
					this.SendPropertyChanging();
					this._Adress = value;
					this.SendPropertyChanged("Adress");
					this.OnAdressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mail", DbType="NVarChar(50)")]
		public string Mail
		{
			get
			{
				return this._Mail;
			}
			set
			{
				if ((this._Mail != value))
				{
					this.OnMailChanging(value);
					this.SendPropertyChanging();
					this._Mail = value;
					this.SendPropertyChanged("Mail");
					this.OnMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_P_Image", DbType="NVarChar(MAX)")]
		public string P_Image
		{
			get
			{
				return this._P_Image;
			}
			set
			{
				if ((this._P_Image != value))
				{
					this.OnP_ImageChanging(value);
					this.SendPropertyChanging();
					this._P_Image = value;
					this.SendPropertyChanged("P_Image");
					this.OnP_ImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Departman", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Departman
		{
			get
			{
				return this._Departman;
			}
			set
			{
				if ((this._Departman != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmanChanging(value);
					this.SendPropertyChanging();
					this._Departman = value;
					this.SendPropertyChanged("Departman");
					this.OnDepartmanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(50)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddedTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> AddedTime
		{
			get
			{
				return this._AddedTime;
			}
			set
			{
				if ((this._AddedTime != value))
				{
					this.OnAddedTimeChanging(value);
					this.SendPropertyChanging();
					this._AddedTime = value;
					this.SendPropertyChanged("AddedTime");
					this.OnAddedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeletedTime
		{
			get
			{
				return this._DeletedTime;
			}
			set
			{
				if ((this._DeletedTime != value))
				{
					this.OnDeletedTimeChanging(value);
					this.SendPropertyChanging();
					this._DeletedTime = value;
					this.SendPropertyChanged("DeletedTime");
					this.OnDeletedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PersonalInformation1_LoginStatus", Storage="_LoginStatus", ThisKey="PID", OtherKey="PersID")]
		public EntitySet<LoginStatus> LoginStatus
		{
			get
			{
				return this._LoginStatus;
			}
			set
			{
				this._LoginStatus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PersonalInformation1_Operation", Storage="_Operations", ThisKey="PID", OtherKey="PersID")]
		public EntitySet<Operation> Operations
		{
			get
			{
				return this._Operations;
			}
			set
			{
				this._Operations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_PersonalInformation1", Storage="_Department", ThisKey="Departman", OtherKey="AuthID", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.PersonalInformation1s.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.PersonalInformation1s.Add(this);
						this._Departman = value.AuthID;
					}
					else
					{
						this._Departman = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LoginStatus(LoginStatus entity)
		{
			this.SendPropertyChanging();
			entity.PersonalInformation1 = this;
		}
		
		private void detach_LoginStatus(LoginStatus entity)
		{
			this.SendPropertyChanging();
			entity.PersonalInformation1 = null;
		}
		
		private void attach_Operations(Operation entity)
		{
			this.SendPropertyChanging();
			entity.PersonalInformation1 = this;
		}
		
		private void detach_Operations(Operation entity)
		{
			this.SendPropertyChanging();
			entity.PersonalInformation1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PersonalInformation")]
	public partial class PersonalInformation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PID;
		
		private string _Name;
		
		private string _Surname;
		
		private string _Tel;
		
		private string _TC;
		
		private string _Adress;
		
		private string _Mail;
		
		private string _P_Image;
		
		private System.Nullable<System.Guid> _Departman;
		
		private string _Username;
		
		private string _Password;
		
		private System.Nullable<System.DateTime> _AddedTime;
		
		private System.Nullable<bool> _IsDeleted;
		
		private System.Nullable<System.DateTime> _DeletedTime;
		
		private EntitySet<LoginStatus> _LoginStatus;
		
		private EntitySet<Operation> _Operations;
		
		private EntityRef<Department> _Department;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPIDChanging(System.Guid value);
    partial void OnPIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSurnameChanging(string value);
    partial void OnSurnameChanged();
    partial void OnTelChanging(string value);
    partial void OnTelChanged();
    partial void OnTCChanging(string value);
    partial void OnTCChanged();
    partial void OnAdressChanging(string value);
    partial void OnAdressChanged();
    partial void OnMailChanging(string value);
    partial void OnMailChanged();
    partial void OnP_ImageChanging(string value);
    partial void OnP_ImageChanged();
    partial void OnDepartmanChanging(System.Nullable<System.Guid> value);
    partial void OnDepartmanChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnAddedTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnAddedTimeChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnDeletedTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDeletedTimeChanged();
    #endregion
		
		public PersonalInformation()
		{
			this._LoginStatus = new EntitySet<LoginStatus>(new Action<LoginStatus>(this.attach_LoginStatus), new Action<LoginStatus>(this.detach_LoginStatus));
			this._Operations = new EntitySet<Operation>(new Action<Operation>(this.attach_Operations), new Action<Operation>(this.detach_Operations));
			this._Department = default(EntityRef<Department>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PID
		{
			get
			{
				return this._PID;
			}
			set
			{
				if ((this._PID != value))
				{
					this.OnPIDChanging(value);
					this.SendPropertyChanging();
					this._PID = value;
					this.SendPropertyChanged("PID");
					this.OnPIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="NVarChar(50)")]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this.OnSurnameChanging(value);
					this.SendPropertyChanging();
					this._Surname = value;
					this.SendPropertyChanged("Surname");
					this.OnSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tel", DbType="NVarChar(50)")]
		public string Tel
		{
			get
			{
				return this._Tel;
			}
			set
			{
				if ((this._Tel != value))
				{
					this.OnTelChanging(value);
					this.SendPropertyChanging();
					this._Tel = value;
					this.SendPropertyChanged("Tel");
					this.OnTelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TC", DbType="NVarChar(50)")]
		public string TC
		{
			get
			{
				return this._TC;
			}
			set
			{
				if ((this._TC != value))
				{
					this.OnTCChanging(value);
					this.SendPropertyChanging();
					this._TC = value;
					this.SendPropertyChanged("TC");
					this.OnTCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adress", DbType="NVarChar(MAX)")]
		public string Adress
		{
			get
			{
				return this._Adress;
			}
			set
			{
				if ((this._Adress != value))
				{
					this.OnAdressChanging(value);
					this.SendPropertyChanging();
					this._Adress = value;
					this.SendPropertyChanged("Adress");
					this.OnAdressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mail", DbType="NVarChar(50)")]
		public string Mail
		{
			get
			{
				return this._Mail;
			}
			set
			{
				if ((this._Mail != value))
				{
					this.OnMailChanging(value);
					this.SendPropertyChanging();
					this._Mail = value;
					this.SendPropertyChanged("Mail");
					this.OnMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_P_Image", DbType="NVarChar(MAX)")]
		public string P_Image
		{
			get
			{
				return this._P_Image;
			}
			set
			{
				if ((this._P_Image != value))
				{
					this.OnP_ImageChanging(value);
					this.SendPropertyChanging();
					this._P_Image = value;
					this.SendPropertyChanged("P_Image");
					this.OnP_ImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Departman", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Departman
		{
			get
			{
				return this._Departman;
			}
			set
			{
				if ((this._Departman != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmanChanging(value);
					this.SendPropertyChanging();
					this._Departman = value;
					this.SendPropertyChanged("Departman");
					this.OnDepartmanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(50)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddedTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> AddedTime
		{
			get
			{
				return this._AddedTime;
			}
			set
			{
				if ((this._AddedTime != value))
				{
					this.OnAddedTimeChanging(value);
					this.SendPropertyChanging();
					this._AddedTime = value;
					this.SendPropertyChanged("AddedTime");
					this.OnAddedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeletedTime
		{
			get
			{
				return this._DeletedTime;
			}
			set
			{
				if ((this._DeletedTime != value))
				{
					this.OnDeletedTimeChanging(value);
					this.SendPropertyChanging();
					this._DeletedTime = value;
					this.SendPropertyChanged("DeletedTime");
					this.OnDeletedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PersonalInformation_LoginStatus", Storage="_LoginStatus", ThisKey="PID", OtherKey="PersID")]
		public EntitySet<LoginStatus> LoginStatus
		{
			get
			{
				return this._LoginStatus;
			}
			set
			{
				this._LoginStatus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PersonalInformation_Operation", Storage="_Operations", ThisKey="PID", OtherKey="PersID")]
		public EntitySet<Operation> Operations
		{
			get
			{
				return this._Operations;
			}
			set
			{
				this._Operations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_PersonalInformation", Storage="_Department", ThisKey="Departman", OtherKey="AuthID", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.PersonalInformations.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.PersonalInformations.Add(this);
						this._Departman = value.AuthID;
					}
					else
					{
						this._Departman = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LoginStatus(LoginStatus entity)
		{
			this.SendPropertyChanging();
			entity.PersonalInformation = this;
		}
		
		private void detach_LoginStatus(LoginStatus entity)
		{
			this.SendPropertyChanging();
			entity.PersonalInformation = null;
		}
		
		private void attach_Operations(Operation entity)
		{
			this.SendPropertyChanging();
			entity.PersonalInformation = this;
		}
		
		private void detach_Operations(Operation entity)
		{
			this.SendPropertyChanging();
			entity.PersonalInformation = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Log]")]
	public partial class Log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _LogID;
		
		private string _LogType;
		
		private string _Explanation;
		
		private System.Nullable<System.DateTime> _Date;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogIDChanging(System.Guid value);
    partial void OnLogIDChanged();
    partial void OnLogTypeChanging(string value);
    partial void OnLogTypeChanged();
    partial void OnExplanationChanging(string value);
    partial void OnExplanationChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    #endregion
		
		public Log()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid LogID
		{
			get
			{
				return this._LogID;
			}
			set
			{
				if ((this._LogID != value))
				{
					this.OnLogIDChanging(value);
					this.SendPropertyChanging();
					this._LogID = value;
					this.SendPropertyChanged("LogID");
					this.OnLogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogType", DbType="NVarChar(50)")]
		public string LogType
		{
			get
			{
				return this._LogType;
			}
			set
			{
				if ((this._LogType != value))
				{
					this.OnLogTypeChanging(value);
					this.SendPropertyChanging();
					this._LogType = value;
					this.SendPropertyChanged("LogType");
					this.OnLogTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Explanation", DbType="NVarChar(MAX)")]
		public string Explanation
		{
			get
			{
				return this._Explanation;
			}
			set
			{
				if ((this._Explanation != value))
				{
					this.OnExplanationChanging(value);
					this.SendPropertyChanging();
					this._Explanation = value;
					this.SendPropertyChanged("Explanation");
					this.OnExplanationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
